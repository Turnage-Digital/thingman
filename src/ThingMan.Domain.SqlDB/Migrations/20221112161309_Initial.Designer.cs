// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThingMan.Domain.SqlDB;

#nullable disable

namespace ThingMan.Domain.SqlDB.Migrations
{
    [DbContext(typeof(ThingManDbContext))]
    [Migration("20221112161309_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("ThingMan.Domain.Entities.PropDef", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PropType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ThingDefId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ThingDefId");

                    b.ToTable("PropDef");
                });

            modelBuilder.Entity("ThingMan.Domain.Entities.ThingDef", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ThingDefs");
                });

            modelBuilder.Entity("ThingMan.Domain.Entities.PropDef", b =>
                {
                    b.HasOne("ThingMan.Domain.Entities.ThingDef", null)
                        .WithMany("Props")
                        .HasForeignKey("ThingDefId");
                });

            modelBuilder.Entity("ThingMan.Domain.Entities.ThingDef", b =>
                {
                    b.Navigation("Props");
                });
#pragma warning restore 612, 618
        }
    }
}
